[
  {
    "id": 8,
    "name": "Eisenhower Matrix",
    "description": "An Eisenhower matrix background and the ability to add task notes. The task notes will be draggable so that they can be positioned in the correct quadrant easily.",
    "date_created": "today",
    "tags": [
      "Firebase",
      "Cypress",
      "PERN"
    ],
    "objectives": [
      "Learn how to create drag and drop elements",
      "Use styled components",
      "Learn how to sign in with Google",
      "Implement with socket.io"
    ],
    "back_end": {
      "github_link": "https://github.com/niamhbrockbank/eisenhower-matrix-back-end",
      "deployed_link": "https://priorities-measure.herokuapp.com/notes",
      "table_schema": [
        "DROP TABLE IF EXISTS notes\nCREATE TABLE notes\n       (\n         note_id SERIAL PRIMARY KEY,\n         note_body VARCHAR(255),\n         position_x INTEGER DEFAULT 465,\n         position_y INTEGER DEFAULT 540\n       )"
      ],
      "API_documentation": [
        "//GET requests\n      GET    /notes",
        "//POST requests\n        POST   /notes    //create a new note\n        \n        //POST request body structure\n        {\n          \"note_body\" : string\n        }",
        "//PUT requests\n        PUT    /notes    //update a specific note\n        \n        //PUT request body structure\n        {\n          \"note\" : {\n            \"note_id\" : number,\n            \"note_body\" : string,\n            \"position\" : {\n              \"x\" : number,\n              \"y\" : number\n            }\n          }\n        }",
        "//DELETE requests\n        DELETE /notes   //delete a specific note\n        \n        //DELETE request body structure\n        {\n          \"note_id\" : number\n        }"
      ]
    },
    "front_end": {
      "github_link": "https://github.com/niamhbrockbank/eisenhower-matrix",
      "deployed_link": "https://priorities-measure.netlify.app/"
    }
  },
  {
    "id": 12,
    "name": "resources sharer",
    "description": "An app that users can 'sign in' to using a dropdown bar and add learning resources to share with their peers. Each user can add resources to their study-list which is available to view on a different page.",
    "date_created": "today",
    "tags": ["PERN", "Express", "Bootstrap"],
    "objectives": [],
    "front_end": {
      "github_link": "https://github.com/Wilrosmi/C5C1-frontend",
      "deployed_link": "https://c5c1-frontend.netlify.app"
    },
    "back_end": {
      "github_link": "https://github.com/Wilrosmi/C5C1-backend",
      "deployed_link": "https://c5c1-backend.herokuapp.com/",
      "table_schema": [
        "DROP TABLE IF EXISTS build_stage CASCADE;\n      DROP TABLE IF EXISTS resource_likes CASCADE;\n      DROP TABLE IF EXISTS comment_likes CASCADE;\n      DROP TABLE IF EXISTS comments CASCADE;\n      DROP TABLE IF EXISTS likes CASCADE;\n      DROP TABLE IF EXISTS recommendation_state CASCADE;\n      DROP TABLE IF EXISTS resources CASCADE;\n      DROP TABLE IF EXISTS resource_tags CASCADE;\n      DROP TABLE IF EXISTS study_list CASCADE;\n      DROP TABLE IF EXISTS tags CASCADE;\n      DROP TABLE IF EXISTS users CASCADE;\n\n      CREATE TABLE tags\n      (\n        tag_name VARCHAR(255) PRIMARY KEY\n      );\n      \n      CREATE TABLE users\n      (\n        user_id SERIAL PRIMARY KEY,\n        name VARCHAR(255),\n        is_faculty BOOLEAN\n      );\n      \n      CREATE TABLE build_stage \n      (\n        stage_name VARCHAR(255) PRIMARY KEY\n      );\n      \n      CREATE TABLE recommendation_state\n      (\n        opinion VARCHAR(255),\n        PRIMARY KEY (opinion)\n      );\n      \n      \n      CREATE TABLE resources\n      (\n        resource_id SERIAL PRIMARY KEY,\n        resource_name VARCHAR(255),\n        author_name VARCHAR(255),\n        url VARCHAR(2048) UNIQUE,\n        description VARCHAR(500),\n        content_type VARCHAR(255),\n        build_stage VARCHAR(255),\n        time_date TIMESTAMP DEFAULT NOW(),\n        opinion VARCHAR(255),\n        opinion_reason VARCHAR(255),\n        user_id INTEGER,\n      \n        CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES users(user_id),\n        CONSTRAINT fk_build_stage FOREIGN KEY(build_stage) REFERENCES build_stage(stage_name),\n        CONSTRAINT fk_recommendation FOREIGN KEY(opinion) REFERENCES recommendation_state(opinion)\n      );\n      \n      CREATE TABLE resource_tags \n      (\n        resource_id INTEGER,\n        tag_name VARCHAR(255),\n        \n        CONSTRAINT fk_resource FOREIGN KEY(resource_id) REFERENCES resources(resource_id) ON DELETE CASCADE,\n        CONSTRAINT fk_tag FOREIGN KEY(tag_name) REFERENCES tags(tag_name),\n        \n        PRIMARY KEY(resource_id, tag_name)\n      );\n      \n      CREATE TABLE comments \n      (\n        comment_id SERIAL PRIMARY KEY,\n        resource_id INTEGER,\n        comment_body VARCHAR(500),\n        user_id INTEGER,\n        time_date TIMESTAMP DEFAULT NOW(),\n      \n        CONSTRAINT fk_resource FOREIGN KEY(resource_id) REFERENCES resources(resource_id) on delete cascade,\n        CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES users(user_id)\n      );\n      \n      CREATE TABLE study_list\n      (\n        user_id INTEGER,\n        resource_id INTEGER,\n      \n        PRIMARY KEY(user_id, resource_id)\n      );\n      \n      CREATE TABLE resource_likes\n      (\n        resource_id INTEGER,\n        user_id INTEGER,\n        liked BOOLEAN,\n      \n        PRIMARY KEY(user_id, resource_id),\n        \n        CONSTRAINT fk_resource FOREIGN KEY (resource_id) \n          REFERENCES resources(resource_id) ON DELETE CASCADE,\n        CONSTRAINT fk_user FOREIGN KEY (user_id) \n          REFERENCES users(user_id) ON DELETE CASCADE\n      );\n      \n      CREATE TABLE comment_likes\n      (\n        comment_id INTEGER,\n        user_id INTEGER,\n        liked BOOLEAN,\n        PRIMARY KEY(comment_id, user_id),\n      \n        CONSTRAINT fk_comment FOREIGN KEY (comment_id) \n          REFERENCES comments(comment_id) ON DELETE CASCADE,\n        CONSTRAINT fk_user FOREIGN KEY (user_id)\n          REFERENCES users(user_id) ON DELETE CASCADE\n      );"
      ]
    }
  },
  {
    "id": 11,
    "name": "pastebin",
    "description": "A full-stack code paste bin that retains formatting of pasted code.",
    "date_created": "today",
    "tags": ["PERN", "TypeScript", "Bootstrap", "Express"],
    "objectives": ["Create a PERN full-stack app", "Use Bootstrap for styling"],
    "back_end": {
      "github_link": "https://github.com/Salman0112358/Paste-Bin-Project-W10-Niamh-Salman-Backend",
      "deployed_link": "https://bluewhale-pastebin.herokuapp.com/"
    },
    "front_end": {
      "github_link": "https://github.com/Salman0112358/Paste-Bin-Project-Niamh-Salman-Frontend",
      "deployed_link": "https://paste-bin-blue-whale-projects.netlify.app/"
    }
  },
  {
    "id": 2,
    "name": "tv show picker",
    "description": "Front-end app that fetches tv show data from an API. User can navigate between shows with a dropdown and filter shows and episodes using a search bar.",
    "date_created": "today",
    "tags": ["Front-end", "TypeScript", "CSS"],
    "objectives": [
      "Use fetch to query an API",
      "Use React hook to manage states"
    ],
    "front_end": {
      "github_link": "https://github.com/Wilrosmi/tv-shows",
      "deployed_link": "https://will-niamh-tv-shows.netlify.app/"
    }
  }
]
